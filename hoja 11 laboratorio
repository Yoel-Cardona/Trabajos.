#Ejercicio 1
import math

class ExperimentoFisico:
    def realizar_experimento(self):
        pass

class CaidaLibre(ExperimentoFisico):
    def __init__(self, altura, gravedad=9.81):
        self.altura = altura
        self.gravedad = gravedad

    def realizar_experimento(self):
        if self.altura < 0:
            raise Exception("Altura negativa no permitida.")
        if self.gravedad == 0:
            raise Exception("Gravedad no puede ser cero.")
        t = math.sqrt(2 * self.altura / self.gravedad)
        return t


c = CaidaLibre(100)  
try:
    tiempo = c.realizar_experimento()
    print("Tiempo de caída:", tiempo)
except Exception as e:
    print("Error:", e)



      #Ejercicio 2

      import math

class OperacionCientifica:
    def calcular(self, valor):
        pass

class RaizCuadrada(OperacionCientifica):
    def calcular(self, valor):
        if valor < 0:
            raise Exception("No se puede calcular la raíz cuadrada de un número negativo.")
        return math.sqrt(valor)

class Potencia(OperacionCientifica):
    def calcular(self, base, exponente):
        return math.pow(base, exponente)

class Logaritmo(OperacionCientifica):
    def calcular(self, valor, base=math.e):
        if valor <= 0:
            raise Exception("No se puede calcular el logaritmo de un número no positivo.")
        return math.log(valor, base)

class Factorial(OperacionCientifica):
    def calcular(self, valor):
        if valor < 0 or not float(valor).is_integer():
            raise Exception("El factorial solo está definido para enteros no negativos.")
        return math.factorial(int(valor))


try:
    r = RaizCuadrada()
    print("Raíz de 16:", r.calcular(16))
    
    p = Potencia()
    print("2^3:", p.calcular(2, 3))
    
    l = Logaritmo()
    print("Logaritmo natural de 10:", l.calcular(10))
    
    f = Factorial()
    print("Factorial de 5:", f.calcular(5))
    
except Exception as e:
    print("Error:", e)
